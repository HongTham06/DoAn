/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package QuanLyNVST;

import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HONG THAM
 */
public class DSNV extends javax.swing.JFrame {
Connection conn= null;
Statement statement= null;
ResultSet result = null;
PreparedStatement pas=null;
DefaultTableModel dtmNhanVien;
DefaultTableModel dtmChon;
int pos=1;
    public DSNV() {
        initComponents();
       // this.setSize(1500, 1000);
        this.setTitle("Danh sách nhân viên");
        this.setLocationRelativeTo(null);
        this.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        this.setBackground(Color.magenta);
        this.setExtendedState(MAXIMIZED_BOTH);
        
        dtmNhanVien=(DefaultTableModel)this.tblNhanVien.getModel();
      
        ketNoiCSDL();
       loadDLComboBox();
       loadDLComboBoxCV();
        HienThiCSDL();
       try {
            result.first();
            hienthiCTKH(result);
        } catch (Exception e) {
        }
      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lblMa = new javax.swing.JLabel();
        lblTen = new javax.swing.JLabel();
        lblNgaySinh = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblSDT = new javax.swing.JLabel();
        lblNgayVL = new javax.swing.JLabel();
        txtMa = new javax.swing.JTextField();
        txtTen = new javax.swing.JTextField();
        txtNgaySinh = new javax.swing.JTextField();
        txtDiaChi = new javax.swing.JTextField();
        txtSDT = new javax.swing.JTextField();
        txtNgayVL = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtGioiTinh = new javax.swing.JTextField();
        lblGmail = new javax.swing.JLabel();
        txtGmail = new javax.swing.JTextField();
        btnThem = new javax.swing.JButton();
        btnLuu = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        lblChucVu = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblNhanVien = new javax.swing.JTable();
        cboChucVu = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        txtSearch = new javax.swing.JTextField();
        btnChon = new javax.swing.JButton();
        txtTimKiem = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        btnTrangChu = new javax.swing.JButton();
        cboPhong = new javax.swing.JComboBox();
        txtCMND = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        lblCMND = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách nhân viên", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 2, 14), new java.awt.Color(204, 204, 0))); // NOI18N
        jPanel3.setForeground(new java.awt.Color(0, 0, 204));

        lblMa.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        lblMa.setForeground(new java.awt.Color(0, 102, 102));
        lblMa.setText("Mã NV");

        lblTen.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        lblTen.setForeground(new java.awt.Color(0, 102, 102));
        lblTen.setText("Tên NV");

        lblNgaySinh.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        lblNgaySinh.setForeground(new java.awt.Color(0, 102, 102));
        lblNgaySinh.setText("Ngày sinh");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 153));
        jLabel6.setText("Địa chỉ");

        lblSDT.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        lblSDT.setForeground(new java.awt.Color(0, 153, 153));
        lblSDT.setText("SĐT");

        lblNgayVL.setFont(new java.awt.Font("Times New Roman", 2, 18)); // NOI18N
        lblNgayVL.setForeground(new java.awt.Color(0, 51, 51));
        lblNgayVL.setText("Ngày VL");

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Giới Tính");

        txtGioiTinh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGioiTinhActionPerformed(evt);
            }
        });

        lblGmail.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        lblGmail.setForeground(new java.awt.Color(0, 102, 102));
        lblGmail.setText("Gmail");

        btnThem.setForeground(new java.awt.Color(255, 102, 102));
        btnThem.setText("THÊM");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnLuu.setForeground(new java.awt.Color(255, 51, 0));
        btnLuu.setText("LƯU");
        btnLuu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLuuActionPerformed(evt);
            }
        });

        btnXoa.setForeground(new java.awt.Color(255, 51, 0));
        btnXoa.setText("XÓA");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnThoat.setForeground(new java.awt.Color(255, 51, 0));
        btnThoat.setText("THOÁT");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        lblChucVu.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        lblChucVu.setForeground(new java.awt.Color(0, 102, 102));
        lblChucVu.setText("Chức Vụ");

        jScrollPane2.setBackground(new java.awt.Color(255, 204, 204));
        jScrollPane2.setForeground(new java.awt.Color(0, 204, 204));

        tblNhanVien.setBackground(new java.awt.Color(180, 252, 233));
        tblNhanVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã NV", "Tên NV", "Ngày Sinh", "Giới Tính", "Địa chỉ", "SĐT", "CMND", "Ngày VL", "Gmail", "Chức vụ", "MAPH"
            }
        ));
        tblNhanVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblNhanVienMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblNhanVien);
        if (tblNhanVien.getColumnModel().getColumnCount() > 0) {
            tblNhanVien.getColumnModel().getColumn(3).setResizable(false);
            tblNhanVien.getColumnModel().getColumn(7).setResizable(false);
        }

        jScrollPane3.setViewportView(jScrollPane2);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Tìm kiếm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 3, 14), new java.awt.Color(102, 102, 0))); // NOI18N
        jPanel2.setForeground(new java.awt.Color(0, 102, 102));

        txtSearch.setText("Nhập mã phòng ban để hiện danh sách NV");

        btnChon.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        btnChon.setForeground(new java.awt.Color(102, 102, 0));
        btnChon.setText("Sreach");
        btnChon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChonActionPerformed(evt);
            }
        });

        txtTimKiem.setText("Nhập mã nhân viên cần tìm kiếm");

        btnSearch.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        btnSearch.setForeground(new java.awt.Color(102, 102, 0));
        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon("C:\\Users\\THAM\\Desktop\\s.PNG")); // NOI18N
        jLabel4.setText("jLabel4");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTimKiem)
                    .addComponent(txtSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 219, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnChon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(42, 42, 42))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChon)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 129, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addGap(56, 56, 56))
        );

        btnTrangChu.setText("<<");
        btnTrangChu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrangChuActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 51, 51));
        jLabel2.setText("Mã PB");

        lblCMND.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        lblCMND.setForeground(new java.awt.Color(0, 102, 102));
        lblCMND.setText("CMND");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(lblMa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblTen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(lblNgaySinh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtMa, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                                    .addComponent(txtTen)
                                    .addComponent(txtNgaySinh))
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel1))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(133, 133, 133)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblSDT, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblCMND)))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(btnTrangChu)
                                .addGap(141, 141, 141)
                                .addComponent(btnThem)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtDiaChi, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                                .addComponent(txtGioiTinh, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                                .addComponent(txtSDT, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                                .addComponent(txtCMND))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(btnLuu)
                                .addGap(197, 197, 197)
                                .addComponent(btnXoa)
                                .addGap(54, 54, 54))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 868, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lblNgayVL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblGmail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(15, 15, 15)
                                                .addComponent(txtNgayVL, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel3Layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(txtGmail))))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lblChucVu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(30, 30, 30)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cboPhong, javax.swing.GroupLayout.Alignment.TRAILING, 0, 165, Short.MAX_VALUE)
                                            .addComponent(cboChucVu, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                .addGap(4, 4, 4))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnThoat)
                        .addGap(223, 223, 223))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMa)
                    .addComponent(txtMa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNgayVL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNgayVL)
                    .addComponent(jLabel1)
                    .addComponent(txtGioiTinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblGmail)
                    .addComponent(txtGmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiaChi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTen)
                    .addComponent(txtTen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSDT)
                    .addComponent(txtSDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(lblChucVu)
                    .addComponent(cboChucVu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 53, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCMND, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblCMND)
                            .addComponent(txtNgaySinh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNgaySinh))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTrangChu)
                    .addComponent(btnThem)
                    .addComponent(btnLuu)
                    .addComponent(btnXoa)
                    .addComponent(btnThoat))
                .addGap(62, 62, 62))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btfirstActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
        try{
            pos=0;
            result.first();
            hienthiCTKH(result);
            tblNhanVien.setRowSelectionInterval(0, 0);
        }
        catch(Exception ex){
            
        }
    }    
 private void btlastActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        try{
            result.last();
            hienthiCTKH(result);
            int rowCount=tblNhanVien.getRowCount();
            tblNhanVien.setRowSelectionInterval(rowCount-1, rowCount-1);
            pos=rowCount-1;
        }
        catch(Exception ex){
            
        }
    }                   
    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        int n=JOptionPane.showConfirmDialog(null, "Thoát CT", "Thoát CT", JOptionPane.YES_NO_OPTION);
        if(n==JOptionPane.YES_OPTION)
        {
           
            TrangChu t= new TrangChu();
            t.setVisible(true);
           
        }
    }//GEN-LAST:event_btnThoatActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        int pos=this.tblNhanVien.getSelectedRow();
        if(pos>=0){
            String code=(String)(tblNhanVien.getValueAt(pos,0));
            if(JOptionPane.showConfirmDialog(this,"Bạn có muốn xóa " +code+ " không")==JOptionPane.OK_OPTION){
                try{
                    String delete="DELETE FROM NhanVien WHERE MANV= '" +txtMa.getText()+ "'";
                    statement.execute(delete);
                    HienThiCSDL();
                }
                catch(Exception ex){

                }
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnLuuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLuuActionPerformed
   if(KiemTraTonTai(txtMa.getText())){
            int ret=JOptionPane.showConfirmDialog(null,"Mã ['"+txtMa.getText()+"'] đã tồn tại bạn có muốn thêm không"
                ,"Thông báo trùng mã",JOptionPane.YES_NO_CANCEL_OPTION);
            if(ret==JOptionPane.NO_OPTION)
            return;
            try{
                String update="Update NhanVien set HOTEN=N'"+txtTen.getText()+"',"
                + " NAMSINH ='"+txtNgaySinh.getText()+"',PHAI='"+txtGioiTinh.getText()+"',"
                + " DIACHI='"+txtDiaChi.getText()+"', SDT='"+txtSDT.getText()+"',"
                + " CMND='"+txtCMND.getText()+"', "
                + "NGAYVL='"+txtNgayVL.getText()+"', GMAIL='"+txtGmail.getText()+"',"+"CHUCVU='"+cboChucVu.getSelectedItem()+
                "' ,"+"MAPH='"+cboPhong.getSelectedItem()+
                "'  Where MANV='"+txtMa.getText()+"'";
                int x=statement.executeUpdate(update);
                if(x>=1)
                    HienThiCSDL();
            }
            catch(Exception ex){
                ex.printStackTrace();
            }
        }
        else{
            try{
                String sqlInsert="Insert Into NhanVien Values('"+txtMa.getText()+"',N'"+txtTen.getText()+"','"+txtNgaySinh.getText()+"',N'"+txtGioiTinh.getText()+"',N'"+txtDiaChi.getText()+"',N'"+txtCMND.getText()+"','"+txtNgayVL.getText()+"', N'"+txtGmail.getText()+"',N'"+txtSDT.getText()+"',N'"+cboPhong.getSelectedItem()+"',N'"+cboChucVu.getSelectedItem()+"')";  

                int x=statement.executeUpdate(sqlInsert);
                if(x>0)
                HienThiCSDL();
            }
            catch(Exception ex){
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnLuuActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        txtMa.setText("");
        txtTen.setText("");
        txtNgaySinh.setText("");
        txtGioiTinh.setText("");
        txtDiaChi.setText("");
        txtGioiTinh.setText("");
        txtSDT.setText("");
        txtCMND.setText("");
        txtNgayVL.setText("");
        txtGmail.setText("");
        txtMa.requestFocus();
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnChonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChonActionPerformed
      /* String sql="Select * from NhanVien where MAPH='"+cboPhongBan.getSelectedItem()+"'";
       try
       {
        while(result.next())
            {
                String ma=result.getString("MANV");
                String ten=result.getString("HOTEN");
                Date ngaySinh=result.getDate("NAMSINH");
                String gioiTinh=result.getString("PHAI");
                 String diaChi=result.getString("DIACHI");
                String sdt=result.getString("SDT");
                Date ngayVL=result.getDate("NGAYVL");
                String gmail=result.getString("GMAIL");
                String chucVu=result.getString("CHUCVU");
           Vector<Object>vec= new Vector<Object>();
           vec.add(ma);
           vec.add(ten);
           vec.add(ngaySinh);
           vec.add(diaChi);
           vec.add(gioiTinh);
           vec.add(sdt);
           vec.add(ngayVL);
           vec.add(gmail);
           vec.add(chucVu);
           dtmNhanVien.addRow(vec);
            }
             }catch(Exception ex)
        {}
       */
        if(KiemTra(txtSearch.getText())){
            try
            {
                String sql="Select * from NhanVien where MAPH='"+txtSearch.getText()+"'";
               
                result=statement.executeQuery(sql);
                dtmNhanVien.setRowCount(0);
            while(result.next())
            {
                String ma=result.getString("MANV");
                String ten=result.getString("HOTEN");
                String ngaySinh=result.getString("NAMSINH");
                String gioiTinh=result.getString("PHAI");
                String diaChi=result.getString("DIACHI");
                String sdt=result.getString("SDT");
                String cmnd=result.getString("CMND");
                String ngayVL=result.getString("NGAYVL");
                String gmail=result.getString("GMAIL");
                String chucVu=result.getString("CHUCVU");
              //  String phong=result.getString("MAPH");
           Vector<Object>vec= new Vector<Object>();
           vec.add(ma);
           vec.add(ten);
           vec.add(ngaySinh);
           vec.add(diaChi);
           vec.add(gioiTinh);
           vec.add(sdt);
           vec.add(cmnd);
           vec.add(ngayVL);
           vec.add(gmail);
           vec.add(chucVu);
          // vec.add(phong);
           dtmNhanVien.addRow(vec);
            }
            }catch(Exception ex)
            {
                ex.printStackTrace();
            }
        }else
        {
            JOptionPane.showConfirmDialog(null," mã không tồn tại"," Thông báo mã không tồn tại",JOptionPane.YES_NO_OPTION);
        }
    }//GEN-LAST:event_btnChonActionPerformed

    private void txtGioiTinhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGioiTinhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGioiTinhActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
         if(KiemTraTonTai(txtTimKiem.getText())){
            try
            {
                String sql="Select * from NhanVien where MANV='"+txtTimKiem.getText()+"'";
               
                result=statement.executeQuery(sql);
                dtmNhanVien.setRowCount(0);
            while(result.next())
            {
                String ma=result.getString("MANV");
                String ten=result.getString("HOTEN");
                String ngaySinh=result.getString("NAMSINH");
                String gioiTinh=result.getString("PHAI");
                String diaChi=result.getString("DIACHI");
                String sdt=result.getString("SDT");
                String cmnd=result.getString("CMND");
                String ngayVL=result.getString("NGAYVL");
                String gmail=result.getString("GMAIL");
                String chucVu=result.getString("CHUCVU");
                String phong=result.getString("MAPH");
           Vector<Object>vec= new Vector<Object>();
           vec.add(ma);
           vec.add(ten);
           vec.add(ngaySinh);
           vec.add(diaChi);
           vec.add(gioiTinh);
           vec.add(sdt);
           vec.add(cmnd);
           vec.add(ngayVL);
           vec.add(gmail);
           vec.add(chucVu);
           vec.add(phong);
           dtmNhanVien.addRow(vec);
            }
            }catch(Exception ex)
            {
                ex.printStackTrace();
            }
        }else
        {
            JOptionPane.showConfirmDialog(null," mã không tồn tại"," Thông báo mã không tồn tại",JOptionPane.YES_NO_OPTION);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnTrangChuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrangChuActionPerformed
      TrangChu t= new TrangChu();
      t.setVisible(true);
    }//GEN-LAST:event_btnTrangChuActionPerformed

    private void tblNhanVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblNhanVienMouseClicked
        int row=this.tblNhanVien.getSelectedRow();
        this.txtMa.setText((String)tblNhanVien.getValueAt(row,0));
        this.txtTen.setText((String)tblNhanVien.getValueAt(row,1));
        this.txtNgaySinh.setText(tblNhanVien.getValueAt(row,2)+"");
        this.txtGioiTinh.setText((String)tblNhanVien.getValueAt(row,3));
        this.txtDiaChi.setText((String)tblNhanVien.getValueAt(row,4));
        this.txtSDT.setText((String)tblNhanVien.getValueAt(row,5));
        this.txtCMND.setText((String)tblNhanVien.getValueAt(row,6));
        this.txtNgayVL.setText(tblNhanVien.getValueAt(row,7)+"");
        this.txtGmail.setText((String)tblNhanVien.getValueAt(row,8));
        this.cboChucVu.setSelectedItem(tblNhanVien.getValueAt(row,9));
        this.cboPhong .setSelectedItem(tblNhanVien.getValueAt(row,10));
    }//GEN-LAST:event_tblNhanVienMouseClicked

    
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DSNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DSNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DSNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DSNV.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DSNV().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnChon;
    private javax.swing.JButton btnLuu;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btnTrangChu;
    private javax.swing.JButton btnXoa;
    private javax.swing.JComboBox cboChucVu;
    private javax.swing.JComboBox cboPhong;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblCMND;
    private javax.swing.JLabel lblChucVu;
    private javax.swing.JLabel lblGmail;
    private javax.swing.JLabel lblMa;
    private javax.swing.JLabel lblNgaySinh;
    private javax.swing.JLabel lblNgayVL;
    private javax.swing.JLabel lblSDT;
    private javax.swing.JLabel lblTen;
    private javax.swing.JTable tblNhanVien;
    private javax.swing.JTextField txtCMND;
    private javax.swing.JTextField txtDiaChi;
    private javax.swing.JTextField txtGioiTinh;
    private javax.swing.JTextField txtGmail;
    private javax.swing.JTextField txtMa;
    private javax.swing.JTextField txtNgaySinh;
    private javax.swing.JTextField txtNgayVL;
    private javax.swing.JTextField txtSDT;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTen;
    private javax.swing.JTextField txtTimKiem;
    // End of variables declaration//GEN-END:variables


    private void HienThiCSDL() {
        
try{
            String sql="select * from NhanVien";
            result= statement.executeQuery(sql);
            dtmNhanVien.setRowCount(0);
            while(result.next())
            {
                String ma=result.getString("MANV");
                String ten=result.getString("HOTEN");
               String ngaySinh=result.getString("NAMSINH");
                String gioiTinh=result.getString("PHAI");
                 String diaChi=result.getString("DIACHI");
                String sdt=result.getString("SDT");
                String cmnd=result.getString("CMND");
                String ngayVL=result.getString("NGAYVL");
                String gmail=result.getString("GMAIL");
                String chucVu=result.getString("CHUCVU");
               String phong=result.getString("MAPH");
           Vector<Object>vec= new Vector<Object>();
           vec.add(ma);
           vec.add(ten);
           vec.add(ngaySinh);
            vec.add(gioiTinh);
           vec.add(diaChi);
           vec.add(sdt);
           vec.add(cmnd);
           vec.add(ngayVL);
           vec.add(gmail);
           vec.add(chucVu);
          vec.add(phong);
           dtmNhanVien.addRow(vec);
            }
             }catch(Exception ex)
        {}
               
}

  
    private boolean KiemTraTonTai(String text) {
        try{
            String sqlSelect ="SELECT * FROM NhanVien WHERE MANV= '"+text+"'";
            ResultSet rs=statement.executeQuery(sqlSelect);
            if(rs.next())
                return true;
            else
                return false;
            
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return false;
    }
    
    private boolean KiemTra(String text) {
        try{
            String sqlSelect ="SELECT * FROM NhanVien WHERE MAPH= '"+text+"'";
            ResultSet rs=statement.executeQuery(sqlSelect);
            if(rs.next())
                return true;
            else
                return false;
            
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        return false;
    }

    private void ketNoiCSDL() {
         String strServerName = "DESKTOP-G8H4QG2\\SQLEXPRESS";
        String strDatabaseName = "QL_NVST";
        String strUserName = "sa";
        String strPassword = "6121999";
         try {
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");
            String connectionURL = "jdbc:sqlserver://" + strServerName
                                + ":1433;databaseName=" + strDatabaseName
                                +" ;user = " + strUserName + "; password = " +  strPassword;
            conn = DriverManager.getConnection(connectionURL);
            statement =conn.createStatement();
        }
        catch(SQLException ex1) {
        System.out.println("SQL Exception: " + ex1.toString());
        }
        catch(ClassNotFoundException ex2) {
                System.out.println("Class Not Found Exception: " + ex2.toString());
        }
    }

    private void hienthiCTKH(ResultSet rs) {
    try {
        txtMa.setText(rs.getString("MANV"));
        txtTen.setText(rs.getString("HOTEN"));
        txtNgaySinh.setText(rs.getDate("NAMSINH")+" ");
        txtGioiTinh.setText(rs.getString("PHAI"));
        txtDiaChi.setText(rs.getString("DIACHI"));
        txtSDT.setText(rs.getString("SDT"));
        txtCMND.setText(rs.getString("CMND"));
       txtNgayVL.setText(rs.getString("NGAYVL")+" ");
        txtGmail.setText(rs.getString("SDT"));
      cboChucVu.setSelectedItem(rs.getString("CHUCVU"));
            } catch (SQLException ex) {
        Logger.getLogger(DSNV.class.getName()).log(Level.SEVERE, null, ex);
    }
    }

   

    private void loadDLComboBoxCV() {
        try
 {
  String sql="select TenCV from CHUCVU";
  result= statement.executeQuery(sql);
   while(result.next())
            {
            String ten=result.getString("TenCV");
            cboChucVu.addItem(ten);
           
            }
 }catch(Exception ex)
 {
     ex.printStackTrace();
 }
    }

    private void loadDLComboBox() {
        try {
  String sql="select MAPH from PHONGBAN";
  result= statement.executeQuery(sql);
   while(result.next())
            {
            String ten=result.getString("MAPH");
            cboPhong.addItem(ten);
           
            }
 }catch(Exception ex)
 {
     ex.printStackTrace();
 }
    }
}
